{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\github\\\\blog\\\\client\\\\src\\\\components\\\\EditPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'react-quill/dist/quill.snow.css';\nimport { Navigate } from \"react-router-dom\";\nimport { fetchEditPost } from \"../functions/fetchEditPost\";\nimport { useParams } from \"react-router-dom\";\nimport { Editor } from \"../functions/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const [post, setPost] = useState({\n    title: \"\",\n    summary: \"\"\n  });\n  const [content, setContent] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  //console.log(files)\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchEditPost(setPost, setContent, setFiles, id);\n  }, []);\n  const postData = event => {\n    const name = event.target.name;\n    //console.log(name)\n    const value = event.target.value;\n    setPost(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  };\n  const postFiles = event => {\n    setFiles(event.target.files[0]);\n  };\n  const updatePost = async event => {\n    event.preventDefault();\n    let data = new FormData();\n    data.set('title', post.title);\n    data.set('summary', post.summary);\n    if (files) {\n      data.set('file', files);\n    }\n    data.set('content', content);\n    data.set('id', id);\n    await fetch('http://localhost:4000/update', {\n      method: \"PATCH\",\n      credentials: 'include',\n      body: data\n    }).then(response => {\n      response.json().then(updatedPost => {\n        setPost({\n          title: updatedPost.title,\n          summary: updatedPost.summary\n        });\n        setContent(updatedPost.content);\n        setRedirect(true);\n      });\n      if (response.ok) {\n        alert('Sucessfully updated');\n      } else {\n        alert('Failed to update');\n      }\n    });\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/post/${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post\",\n      onSubmit: updatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postData,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Your Blog title\",\n        value: post.title,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postData,\n        type: \"text\",\n        name: \"summary\",\n        placeholder: \"Summary\",\n        value: post.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postFiles,\n        type: \"file\",\n        name: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: content,\n        onChange: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"post-btn\",\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"OvRoPoI++GJgQBFScQuPm4vdklM=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchEditPost","useParams","Editor","jsxDEV","_jsxDEV","EditPost","_s","post","setPost","title","summary","content","setContent","files","setFiles","redirect","setRedirect","id","postData","event","name","target","value","prevValue","postFiles","updatePost","preventDefault","data","FormData","set","fetch","method","credentials","body","then","response","json","updatedPost","ok","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","onChange","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/github/blog/client/src/components/EditPost.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { fetchEditPost } from \"../functions/fetchEditPost\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Editor } from \"../functions/Editor\";\r\n\r\nexport default function EditPost() {\r\n    \r\n\r\n    const [post, setPost] = useState({title:\"\", summary:\"\"});\r\n    const [content, setContent] = useState(\"\");\r\n    const [files, setFiles] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n    //console.log(files)\r\n    const {id} = useParams();\r\n\r\n\r\n  \r\n    useEffect(()=>{\r\n        fetchEditPost(setPost,setContent,setFiles,id);\r\n    }, []);\r\n\r\n\r\n    const postData = (event)=>{\r\n        const name = event.target.name;\r\n        //console.log(name)\r\n        const value = event.target.value;\r\n         setPost(prevValue=>{\r\n             return(\r\n                 {\r\n                   ...prevValue,\r\n                   [name] : value  \r\n                 }\r\n             )\r\n         })\r\n     }\r\n \r\n     const postFiles = event=> {\r\n       setFiles(event.target.files[0]);\r\n     }\r\n\r\n     const updatePost= async event=>{\r\n        event.preventDefault();\r\n        let data = new FormData()\r\n        data.set('title', post.title);\r\n        data.set('summary', post.summary);\r\n        if(files){\r\n            data.set('file', files);\r\n        }\r\n        data.set('content', content);\r\n        data.set('id', id)\r\n       \r\n        \r\n\r\n        await fetch('http://localhost:4000/update', {\r\n            method:\"PATCH\",\r\n            credentials: 'include',\r\n            body: data\r\n            \r\n        }).then(response=>{\r\n            response.json().then(updatedPost=>{\r\n                setPost({title: updatedPost.title, summary: updatedPost.summary});\r\n                setContent(updatedPost.content);\r\n                setRedirect(true);\r\n            })\r\n            if(response.ok){\r\n                alert('Sucessfully updated');\r\n                \r\n              }\r\n              else{\r\n                alert('Failed to update');\r\n              }\r\n        });\r\n    }\r\n \r\n\r\n    if(redirect){\r\n        return (<Navigate to={`/post/${id}`} />)\r\n        }\r\n\r\n\r\n  return(\r\n    <section>\r\n          <form className=\"post\" onSubmit={updatePost}>\r\n            <input onChange={postData} \r\n            type=\"text\" name=\"title\" \r\n            placeholder=\"Your Blog title\"  \r\n            value={post.title} required/>\r\n\r\n            <input onChange={postData} \r\n            type=\"text\" name=\"summary\" \r\n            placeholder=\"Summary\" value=\r\n            {post.summary}/>\r\n\r\n            <input onChange={postFiles}\r\n            type=\"file\" name=\"image\"/>\r\n\r\n            <Editor  value={content} onChange={setContent}/>\r\n            <button id=\"post-btn\" type=\"submit\">Confirm</button>\r\n          </form>\r\n        </section>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iCAAiC;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAG/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAACY,KAAK,EAAC,EAAE;IAAEC,OAAO,EAAC;EAAE,CAAC,CAAC;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA,MAAM;IAACoB;EAAE,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAIxBH,SAAS,CAAC,MAAI;IACVE,aAAa,CAACQ,OAAO,EAACI,UAAU,EAACE,QAAQ,EAACG,EAAE,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,QAAQ,GAAIC,KAAK,IAAG;IACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B;IACA,MAAME,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;IAC/Bd,OAAO,CAACe,SAAS,IAAE;MACf,OACI;QACE,GAAGA,SAAS;QACZ,CAACH,IAAI,GAAIE;MACX,CAAC;IAET,CAAC,CAAC;EACN,CAAC;EAED,MAAME,SAAS,GAAGL,KAAK,IAAG;IACxBL,QAAQ,CAACK,KAAK,CAACE,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMY,UAAU,GAAE,MAAMN,KAAK,IAAE;IAC5BA,KAAK,CAACO,cAAc,CAAC,CAAC;IACtB,IAAIC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IACzBD,IAAI,CAACE,GAAG,CAAC,OAAO,EAAEtB,IAAI,CAACE,KAAK,CAAC;IAC7BkB,IAAI,CAACE,GAAG,CAAC,SAAS,EAAEtB,IAAI,CAACG,OAAO,CAAC;IACjC,IAAGG,KAAK,EAAC;MACLc,IAAI,CAACE,GAAG,CAAC,MAAM,EAAEhB,KAAK,CAAC;IAC3B;IACAc,IAAI,CAACE,GAAG,CAAC,SAAS,EAAElB,OAAO,CAAC;IAC5BgB,IAAI,CAACE,GAAG,CAAC,IAAI,EAAEZ,EAAE,CAAC;IAIlB,MAAMa,KAAK,CAAC,8BAA8B,EAAE;MACxCC,MAAM,EAAC,OAAO;MACdC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEN;IAEV,CAAC,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAE;MACdA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACG,WAAW,IAAE;QAC9B7B,OAAO,CAAC;UAACC,KAAK,EAAE4B,WAAW,CAAC5B,KAAK;UAAEC,OAAO,EAAE2B,WAAW,CAAC3B;QAAO,CAAC,CAAC;QACjEE,UAAU,CAACyB,WAAW,CAAC1B,OAAO,CAAC;QAC/BK,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC;MACF,IAAGmB,QAAQ,CAACG,EAAE,EAAC;QACXC,KAAK,CAAC,qBAAqB,CAAC;MAE9B,CAAC,MACG;QACFA,KAAK,CAAC,kBAAkB,CAAC;MAC3B;IACN,CAAC,CAAC;EACN,CAAC;EAGD,IAAGxB,QAAQ,EAAC;IACR,oBAAQX,OAAA,CAACL,QAAQ;MAACyC,EAAE,EAAG,SAAQvB,EAAG;IAAE;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;EAGN,oBACExC,OAAA;IAAAyC,QAAA,eACMzC,OAAA;MAAM0C,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAEtB,UAAW;MAAAoB,QAAA,gBAC1CzC,OAAA;QAAO4C,QAAQ,EAAE9B,QAAS;QAC1B+B,IAAI,EAAC,MAAM;QAAC7B,IAAI,EAAC,OAAO;QACxB8B,WAAW,EAAC,iBAAiB;QAC7B5B,KAAK,EAAEf,IAAI,CAACE,KAAM;QAAC0C,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE7BxC,OAAA;QAAO4C,QAAQ,EAAE9B,QAAS;QAC1B+B,IAAI,EAAC,MAAM;QAAC7B,IAAI,EAAC,SAAS;QAC1B8B,WAAW,EAAC,SAAS;QAAC5B,KAAK,EAC1Bf,IAAI,CAACG;MAAQ;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEhBxC,OAAA;QAAO4C,QAAQ,EAAExB,SAAU;QAC3ByB,IAAI,EAAC,MAAM;QAAC7B,IAAI,EAAC;MAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE1BxC,OAAA,CAACF,MAAM;QAAEoB,KAAK,EAAEX,OAAQ;QAACqC,QAAQ,EAAEpC;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDxC,OAAA;QAAQa,EAAE,EAAC,UAAU;QAACgC,IAAI,EAAC,QAAQ;QAAAJ,QAAA,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB;AAACtC,EAAA,CAhGuBD,QAAQ;EAAA,QAQfJ,SAAS;AAAA;AAAAmD,EAAA,GARF/C,QAAQ;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}