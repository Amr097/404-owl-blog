{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\github\\\\blog\\\\frontend\\\\src\\\\components\\\\Blog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useContext } from \"react\";\nimport { StateContext } from \"../StateContext\";\nimport 'react-quill/dist/quill.snow.css';\nimport { Navigate } from \"react-router-dom\";\nimport { Editor } from \"../functions/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  _s();\n  const [post, setPost] = useState({\n    title: \"\",\n    summary: \"\"\n  });\n  const [content, setContent] = useState(\"\");\n  const [files, setFiles] = useState({});\n  const [redirect, setRedirect] = useState(false);\n  const {\n    status\n  } = useContext(StateContext);\n  const inputRef = useRef(null);\n  const postData = event => {\n    const name = event.target.name;\n    //console.log(name)\n    const value = event.target.value;\n    setPost(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  };\n  const postFiles = event => {\n    setFiles(event.target.files[0]);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    let data = new FormData();\n    data.set('title', post.title);\n    data.set('summary', post.summary);\n    data.set('file', files);\n    data.set('content', content);\n    await fetch('http://localhost:4000/submit', {\n      method: \"POST\",\n      credentials: 'include',\n      body: data\n    }).then(response => {\n      //console.log(response)\n      if (response.ok) {\n        alert('Sucessfully published');\n        setPost({\n          title: \"\",\n          summary: \"\"\n        });\n        setContent(\"\");\n        inputRef.current.value = null;\n        setRedirect(true);\n      } else {\n        alert('Failed to publish');\n      }\n    });\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this);\n  }\n  return status && /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postData,\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Your Blog title\",\n        value: post.title,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postData,\n        type: \"text\",\n        name: \"summary\",\n        placeholder: \"Summary\",\n        maxLength: \"150\",\n        value: post.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: postFiles,\n        ref: inputRef,\n        type: \"file\",\n        name: \"image\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        value: content,\n        onChange: setContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"post-btn\",\n        type: \"submit\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n_s(Blog, \"fXI7sG+JLeuEiEa/zdRFgOrbXyk=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useRef","useState","useContext","StateContext","Navigate","Editor","jsxDEV","_jsxDEV","Blog","_s","post","setPost","title","summary","content","setContent","files","setFiles","redirect","setRedirect","status","inputRef","postData","event","name","target","value","prevValue","postFiles","onSubmit","preventDefault","data","FormData","set","fetch","method","credentials","body","then","response","ok","alert","current","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onChange","type","placeholder","required","maxLength","ref","id","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/github/blog/frontend/src/components/Blog.jsx"],"sourcesContent":["import React, { useRef, useState, useContext } from \"react\";\r\nimport { StateContext } from \"../StateContext\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Editor } from \"../functions/Editor\";\r\n\r\n    \r\n\r\nconst Blog = ()=>{\r\n\r\n    const [post, setPost] = useState({title:\"\", summary:\"\"});\r\n    const [content, setContent] = useState(\"\");\r\n    const [files, setFiles] = useState({});\r\n    const [redirect, setRedirect] = useState(false);\r\n    const {status} = useContext(StateContext);\r\n    const inputRef = useRef(null); \r\n\r\n    const postData = (event)=>{\r\n       const name = event.target.name;\r\n       //console.log(name)\r\n       const value = event.target.value;\r\n        setPost(prevValue=>{\r\n            return(\r\n                {\r\n                  ...prevValue,\r\n                  [name] : value  \r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const postFiles = event=> {\r\n      setFiles(event.target.files[0]);\r\n    }\r\n    \r\n  \r\n    const onSubmit= async event=>{\r\n        event.preventDefault();\r\n        let data = new FormData()\r\n        data.set('title', post.title);\r\n        data.set('summary', post.summary);\r\n        data.set('file', files);\r\n        data.set('content', content);\r\n\r\n        \r\n\r\n        await fetch('http://localhost:4000/submit', {\r\n            method:\"POST\",\r\n            credentials: 'include',\r\n            body: data\r\n            \r\n        }).then(response=>{\r\n            //console.log(response)\r\n            if(response.ok){\r\n                alert('Sucessfully published');\r\n                setPost({title:\"\", summary:\"\"});\r\n                setContent(\"\");\r\n                inputRef.current.value = null;\r\n                setRedirect(true);\r\n              }\r\n              else{\r\n                alert('Failed to publish');\r\n              }\r\n        });\r\n    }\r\n\r\n    \r\n    if(redirect){\r\n      return (<Navigate to={'/'} />)\r\n      } \r\n   \r\n    return(\r\n        status &&\r\n        (<section>\r\n          <form className=\"post\" onSubmit={onSubmit}>\r\n            <input onChange={postData} \r\n            type=\"text\" name=\"title\" \r\n            placeholder=\"Your Blog title\"  \r\n            value={post.title} required/>\r\n\r\n            <input onChange={postData} \r\n            type=\"text\" name=\"summary\" \r\n            placeholder=\"Summary\" maxLength=\"150\" value=\r\n            {post.summary}/>\r\n\r\n            <input onChange={postFiles} ref={inputRef} \r\n            type=\"file\" name=\"image\" required/>\r\n\r\n            <Editor value={content} onChange={setContent} />\r\n            <button id=\"post-btn\" type=\"submit\">Publish</button>\r\n          </form>\r\n        </section>)\r\n    )\r\n}\r\n\r\nexport default Blog;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}