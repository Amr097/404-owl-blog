{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\github\\\\blog\\\\client\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [Input, setInput] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [redirect, setRedirect] = useState(false);\n  const setInputHandler = event => {\n    const userInput = event.target.value;\n    const inputName = event.target.name;\n    setInput(prevValue => {\n      return {\n        ...prevValue,\n        [inputName]: userInput\n      };\n    });\n  };\n  const onRegister = async event => {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(Input),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    //console.log(response);\n\n    if (response.status == 200) {\n      setRedirect(true);\n    } else {\n      alert('Failed to register');\n    }\n    setInput({\n      username: \"\",\n      password: \"\"\n    });\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/login\",\n    className: \"login\",\n    onSubmit: onRegister,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: setInputHandler,\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"username\",\n        value: Input.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: setInputHandler,\n        type: \"password\",\n        maxLength: \"20\",\n        name: \"password\",\n        value: Input.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 8\n  }, this);\n};\n_s(Register, \"U9f13LId9NoyTSpV+su0Udr9mdY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Navigate","jsxDEV","_jsxDEV","Register","_s","Input","setInput","username","password","redirect","setRedirect","setInputHandler","event","userInput","target","value","inputName","name","prevValue","onRegister","preventDefault","response","fetch","method","credentials","body","JSON","stringify","headers","status","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","action","className","onSubmit","autoComplete","children","onChange","type","maxLength","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/github/blog/client/src/components/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Register = ()=>{\r\n\r\n  const [Input, setInput]=useState({username:\"\",password:\"\"});\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const setInputHandler = event=>{\r\n      const userInput = event.target.value;\r\n      const inputName = event.target.name;\r\n     \r\n      setInput(prevValue=>{\r\n        return({\r\n           ...prevValue,\r\n           [inputName]:userInput\r\n        })\r\n      });\r\n  }\r\n\r\n  const onRegister = async event=>{\r\n    event.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:4000/register', {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify(Input),\r\n      headers: {'Content-Type':'application/json'}\r\n    });\r\n\r\n    //console.log(response);\r\n\r\n    if(response.status==200){\r\n      setRedirect(true);\r\n    }\r\n    else{\r\n      alert('Failed to register');\r\n    }\r\n    setInput({username:\"\",password:\"\"});\r\n  }\r\n\r\n  if(redirect){\r\n    return(<Navigate to={'/login'} />);\r\n  }\r\n    return(\r\n       <form action=\"/login\" className=\"login\" onSubmit={onRegister} autoComplete=\"off\">\r\n         <h1>Sign Up</h1>\r\n         <div className=\"text-field\">\r\n         <input onChange={setInputHandler} type=\"text\" maxLength=\"20\" name=\"username\" value={Input.username} />\r\n         <label>Username</label>\r\n         </div>\r\n         <div className=\"password\">\r\n         <input onChange={setInputHandler} type=\"password\" maxLength=\"20\" name=\"password\" value={Input.password}/>\r\n         <label>Password</label>\r\n         </div>\r\n         <button>Sign Up</button>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}